#!/bin/sh
# chkconfig:	345 91 35
# description:	This package enables Linux to talk to Macintosh computers via the \
#		AppleTalk networking protocol. It includes a daemon to allow Linux \
#		to act as a file server over EtherTalk or IP for Mac's.
# processname: atalkd
# pidfile: /var/run/atalkd.pid
# config: /etc/atalk/*

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Source Appletalk configuration
. /etc/sysconfig/netatalk

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network ]; then
		msg_network_down AppleTalk
		exit 1
	fi
else
	exit 0
fi

#check atalkd.conf exit
#[ -f /etc/atalk/atalkd.conf ] || exit 0

RETVAL=0
case "$1" in
  start)
	if [ ! -f /var/lock/subsys/atalk ]; then
		_insmod single -f /lib/modules/`uname -r`/misc/appletalk.o
		if [ "$ATALK_BGROUND" = yes ]; then
#			nls -n "(backgrounded)"
			msg_starting AppleTalk
			daemon atalkd
			nbprgstr -p 4 "${ATALK_NAME}:Workstation"
			nbprgstr -p 4 "${ATALK_NAME}:netatalk"
			if [ ${PAPD_RUN} = yes ]; then
				msg_starting papd
				daemon papd
			fi
			if [ ${AFPD_RUN} = yes ]; then
				msg_starting afpd
				daemon afpd -c ${AFPD_MAX_CLIENTS} -n ${ATALK_NAME}
			fi
			>/dev/null &
		fi
	else
		msg_already_running AppleTalk
	fi
	touch /var/lock/subsys/atalk
	;;
  stop)
	if [ -f /var/lock/subsys/atalk ]; then
		if [ "$ATALK_BGROUND" = yes ]; then
			msg_stopping afpd
			killproc afpd
			msg_stopping papd
			killproc papd
			nbpunrgstr "${ATALK_NAME}:Workstation@*"
			nbpunrgstr "${ATALK_NAME}:netatalk@*"
			msg_stopping AppleTalk
			killproc atalkd
		fi
		# Attempt to zap the module, so that we can restart the
		# Appletalk daemons cleanly
		if [ -e /proc/modules ] && [ -x /sbin/modprobe ]; then
			modprobe -r appletalk
		fi
		rm -f /var/lock/subsys/atalk >/dev/null 2>&1
	else
		msg_not_running AppleTalk
	fi
	;;
  restart|force-reload)
	$0 stop
	$0 start
	exit $?
	;;
  status)
	status atalkd
	RETVAL=?
	status papd
	[ $RETVAL -eq 0 ] && RETVAL=?
	status afpd
	[ $RETVAL -eq 0 ] && RETVAL=?
	;;
  *)
	msg_usage "$0 {start|stop|restart|force-reload|status}"
	exit 3
esac

exit $RETVAL
